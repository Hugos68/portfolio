---
import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";
import Layout from "../../../layouts/Layout.astro";
import TableOfContents from "../../../components/TableOfContents.astro";
import { formatDate } from "../../../utils";

export const getStaticPaths = (async () => {
	const entries = await getCollection("blog");
	return entries.map((entry) => ({
		params: {
			slug: entry.slug,
		},
		props: {
			entry,
		},
	}));
}) satisfies GetStaticPaths;

const { entry } = Astro.props;

const { Content, headings } = await entry.render();
---

<Layout
	title={entry.data.title}
	description={entry.data.description}
	tags={entry.data.tags}
	image={entry.data.image}
>
	<header class="prose prose-stone dark:prose-invert max-w-[65ch] w-full mx-auto xl:mx-0" slot="header">
		<h1>{entry.data.title}</h1>
		<p>{entry.data.description}</p>
	</header>
	<div class="flex justify-center xl:justify-between gap-8">
		<div
			class="w-full prose prose-stone dark:prose-invert prose-headings:scroll-mt-24 prose-img:rounded-md"
		>
			{
				entry.data.image && (
					<img
						class="mb-4"
						src={entry.data.image}
						alt={entry.data.title}
						width="1280"
						height="720"
					/>
				)
			}
			<div class="flex justify-between not-prose font-semibold mb-16">
				{
					entry.data.tags && (
						<div class="flex gap-2 text-lg">
							{entry.data.tags.map((tag) => (
								<span>#{tag}</span>
							))}
						</div>
					)
				}
				<p>Posted on: {formatDate(entry.data.publishedAt)}</p>
			</div>
			<div class="xl:hidden bg-stone-200 dark:bg-stone-900 p-4 rounded-md">
				<h2 class="mt-0">Table of Contents</h2>
				<TableOfContents headings={headings} />
			</div>

			<Content />
			<p class="italic mt-8">
				Last edited at: {formatDate(entry.data.editedAt)}
			</p>
		</div>
		<aside
			class="hidden xl:block prose prose-stone dark:prose-invert sticky top-24 h-full bg-stone-200 dark:bg-stone-900 p-4 rounded-md"
		>
			<h2>Table of Contents</h2>
			<TableOfContents headings={headings} />
		</aside>
	</div>
</Layout>

<style is:global>
	h1 > a,
	h2 > a,
	h3 > a,
	h4 > a,
	h5 > a,
	h6 > a {
		text-decoration-line: none !important;
	}
</style>
