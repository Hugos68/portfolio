---
import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";
import Layout from "../../../layouts/Layout.astro";
import TableOfContents from "../../../components/TableOfContents.astro";

export const getStaticPaths = (async () => {
	const entries = await getCollection("blog");
	return entries.map((entry) => ({
		params: {
			slug: entry.slug,
		},
		props: {
			entry,
		},
	}));
}) satisfies GetStaticPaths;

const { entry } = Astro.props;

const { Content, headings } = await entry.render();
---

<Layout title={entry.data.title} description={entry.data.description} tags={entry.data.tags}>
	<div class="flex justify-center lg:justify-between gap-2">
		<article class="w-full prose prose-neutral dark:prose-invert prose-headings:scroll-mt-24">
			<h1>{entry.data.title}</h1>
			<p>{entry.data.description}</p>
			{entry.data.tags.length > 0 && entry.data.tags.forEach((tag) => <span>{tag}</span>)}
			<p>{entry.data.publishedAt.toLocaleDateString()}</p>
			<nav class="lg:hidden flex-shrink">
				<h2>Table of Contents</h2>
				<TableOfContents headings={headings} />
			</nav>
			<Content />
			<p class="italic mt-8">Last edited at: {entry.data.editedAt.toLocaleDateString()}</p>
		</article>
		<nav
			class="hidden lg:block flex-shrink prose prose-neutral dark:prose-invert sticky top-24 h-full"
		>
			<h2>Table of Contents</h2>
			<TableOfContents headings={headings} />
		</nav>
	</div>
</Layout>

<style is:global>
	/* TODO: Convert this to a tailwind class */
	h1 > a, h2 > a, h3 > a, h4 > a, h5 > a, h6 > a {
		text-decoration-line: none !important;
	}

	@media (prefers-color-scheme: dark) {
		.shiki,
		.shiki span {
			color: var(--shiki-dark) !important;
			background-color: var(--shiki-dark-bg) !important;
			/* Optional, if you also want font styles */
			font-style: var(--shiki-dark-font-style) !important;
			font-weight: var(--shiki-dark-font-weight) !important;
			text-decoration: var(--shiki-dark-text-decoration) !important;
		}
	}
</style>
