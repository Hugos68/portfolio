---
import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";
import Layout from "../../../layouts/Layout.astro";
import TableOfContents from "../../../components/TableOfContents.astro";
import { formatDate } from "../../../utils";

export const getStaticPaths = (async () => {
	const entries = await getCollection("blog");
	return entries.map((entry) => ({
		params: {
			slug: entry.slug,
		},
		props: {
			entry,
		},
	}));
}) satisfies GetStaticPaths;

const { entry } = Astro.props;

const { Content, headings } = await entry.render();
---

<Layout tags={entry.data.tags} image={entry.data.image}>
	<div class="flex justify-center lg:justify-between gap-2">
		<article
			class="w-full prose prose-neutral dark:prose-invert prose-headings:scroll-mt-24 prose-img:rounded-md"
		>
			<h1>{entry.data.title}</h1>
			{
				entry.data.image && (
					<img
						class="mb-2"
						src={entry.data.image}
						alt={entry.data.title}
						width="1280"
						height="720"
					/>
				)
			}
			<div class="flex justify-between not-prose font-semibold">
				{
					entry.data.tags && (
						<div class="flex gap-2 text-lg ">
							{entry.data.tags.map((tag) => (
								<a href={`/blogs/categories/${tag}`}>#{tag}</a>
							))}
						</div>
					)
				}
				<p>Posted on: {formatDate(entry.data.publishedAt)}</p>
			</div>
			<nav class="lg:hidden flex-shrink">
				<h2>Table of Contents</h2>
				<TableOfContents headings={headings} />
			</nav>
			<Content />
			<p class="italic mt-8">
				Last edited at: {formatDate(entry.data.editedAt)}
			</p>
		</article>
		<nav
			class="hidden lg:block flex-shrink prose prose-neutral dark:prose-invert sticky top-24 h-full"
		>
			<h2>Table of Contents</h2>
			<TableOfContents headings={headings} />
		</nav>
	</div>
</Layout>

<style is:global>
	/* TODO: Convert this to a tailwind class */
	h1 > a,
	h2 > a,
	h3 > a,
	h4 > a,
	h5 > a,
	h6 > a {
		text-decoration-line: none !important;
	}
</style>
